pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Davidgit526/Netflix-clone.git'
            }
        }
        
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Build, Tag, Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh 'docker build -t netflix-app-1 .'
                        sh 'docker tag netflix-app-1 muralisocial123/netflix-app-1:latest'
                        sh 'docker push muralisocial123/netflix-app-1:latest'
                        sh 'docker run -d --name netflix -p 80:80 netflix-app-1:latest'
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    dir('Kubernetes') {
                       withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kube-config', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                            sh 'kubectl apply -f deployment.yml'
                            sh 'kubectl apply -f service.yml'
                        }
                    }
                }
            }
        }
    }
}
